{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_ALPHABET","SORT_FIELD_LENGTH","App","useState","sortField","setSortField","reverseField","setReverseField","sortedGoods","goods","sort","good1","good2","localeCompare","length","reverse","getSortedGoods","className","type","onClick","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"mPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAsB,WACtBC,EAAoB,SA2BnB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,oBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACMC,EA5BR,SAAwBC,EAAxB,GAA6D,IAA5BL,EAA2B,EAA3BA,UAAWE,EAAgB,EAAhBA,aACpCE,EAAW,YAAOC,GAqBxB,OAnBIL,GACFI,EAAYE,MAAK,SAACC,EAAOC,GACvB,OAAQR,GACN,KAAKJ,EACH,OAAOW,EAAME,cAAcD,GAE7B,KAAKX,EACH,OAAOU,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXR,GACFE,EAAYO,UAGPP,EAMaQ,CAClBjB,EACA,CAAEK,YAAWE,iBAGf,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAMd,EAAaL,IAC5BiB,UAAWG,IAAG,SAAU,UAAW,CACjC,WAAYhB,IAAcJ,IAJ9B,iCAUA,wBACEkB,KAAK,SACLC,QAAS,kBAAMd,EAAaJ,IAC5BgB,UAAWG,IAAG,SAAU,aAAc,CACpC,WAAYhB,IAAcH,IAJ9B,4BAUA,wBACEiB,KAAK,SACLC,QAAS,kBAAMZ,GAAiBD,IAChCW,UAAWG,IAAG,SAAU,aAAc,CACpC,YAAad,IAJjB,sBAUEF,GAAaE,IACb,wBACEY,KAAK,SACLC,QAAS,WACPd,EAAa,IACbE,GAAgB,IAElBU,UAAU,4BANZ,sBAcJ,6BACGT,EAAYa,KAAI,SAAAC,GAAI,OACnB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YCrGlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.74688679.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport { useState } from 'react';\nimport cn from 'classnames';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ALPHABET = 'alphabet';\nconst SORT_FIELD_LENGTH = 'length';\n\nfunction getSortedGoods(goods, { sortField, reverseField }) {\n  const sortedGoods = [...goods];\n\n  if (sortField) {\n    sortedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_ALPHABET:\n          return good1.localeCompare(good2);\n\n        case SORT_FIELD_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverseField) {\n    sortedGoods.reverse();\n  }\n\n  return sortedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [reverseField, setReverseField] = useState(false);\n  const sortedGoods = getSortedGoods(\n    goodsFromServer,\n    { sortField, reverseField },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={() => setSortField(SORT_FIELD_ALPHABET)}\n          className={cn('button', 'is-info', {\n            'is-light': sortField !== SORT_FIELD_ALPHABET,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n          className={cn('button', 'is-success', {\n            'is-light': sortField !== SORT_FIELD_LENGTH,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setReverseField(!reverseField)}\n          className={cn('button', 'is-warning', {\n            'is-light': !reverseField,\n          })}\n        >\n          Reverse\n        </button>\n\n        {(sortField || reverseField) && (\n          <button\n            type=\"button\"\n            onClick={() => {\n              setSortField('');\n              setReverseField(false);\n            }}\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <ul>\n        {sortedGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}